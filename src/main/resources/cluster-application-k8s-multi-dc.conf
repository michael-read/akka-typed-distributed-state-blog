include "cluster-application-base.conf"
include "telemetry-prometheus.conf"

akka {

  remote {
    artery {
      canonical.hostname = ${DATA-CENTER-HOST}
      canonical.port = ${clustering.port}
    }
  }

  #discovery-config
  discovery {
    kubernetes-api {
      pod-label-selector = "app=%s"
    }
  }
  #discovery-config

  #management-config
  management {
    cluster.bootstrap {
      contact-point-discovery {
        # For the kubernetes API this value is substributed into the %s in pod-label-selector
        service-name = ${clustering.cluster.name}
        port-name = "akka-mgmt-http"
        # pick the discovery method you'd like to use:
        discovery-method = kubernetes-api
      }
    }
  }
  #management-config

  cluster {
    roles=["sharded", "k8s"]
    shutdown-after-unsuccessful-join-seed-nodes = 40s

    app-version = ${APP-VERSION}
    multi-data-center.self-data-center = ${DATA-CENTER}
  }

  coordinated-shutdown.terminate-actor-system = on

  persistence {

    journal-dc1.plugin = "akka.persistence.r2dbc-dc1.journal"
    journal-dc2.plugin = "akka.persistence.r2dbc-dc2.journal"
#    snapshot-store.plugin = "akka.persistence.r2dbc.snapshot"
#    state.plugin = "akka.persistence.r2dbc.durable-state-store"

    r2dbc-dc1 {
      dialect = "yugabyte"
      connection-factory {
        driver = "postgres"
        host = "localhost"
        host = ${?DB_HOST_DC1}
        port = 5433
        database = "yugabyte"
        database = ${?DB_NAME}
        user = "yugabyte"
        host = ${?DB_USER}
        password = "yugabyte"
        password = ${?DB_PASSWORD}

        # ssl {
        #   enabled = on
        #   mode = "VERIFY_CA"
        #   root-cert = "/path/db_root.crt"
        # }
      }
    }

    r2dbc-dc2 {
      dialect = "yugabyte"
      connection-factory {
        driver = "postgres"
        host = "localhost"
        host = ${?DB_HOST_DC2}
        port = 5433
        database = "yugabyte"
        database = ${?DB_NAME}
        user = "yugabyte"
        host = ${?DB_USER}
        password = "yugabyte"
        password = ${?DB_PASSWORD}

        # ssl {
        #   enabled = on
        #   mode = "VERIFY_CA"
        #   root-cert = "/path/db_root.crt"
        # }
      }
    }

  }
}

clustering {
  ip = ""
  port = 2552
  defaultPort = ${clustering.port}
  allDataCenters = ${ALL-DATA-CENTERS}
}